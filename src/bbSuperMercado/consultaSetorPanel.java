/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package bbSuperMercado;

import static bbSuperMercado.Cliente.caixaEscolhido;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.InputMismatchException;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author bruno
 */
public class consultaSetorPanel extends javax.swing.JPanel {

    /**
     * Creates new form consultaSetorPanel
     */
    public consultaSetorPanel(JFrame mainFrame) {
        
        initComponents();        
        
        mainFrame.setTitle("BB Super-Mercado | $Cliente - Consulta do setor: " + Cliente.setorAtual);
        
        DefaultListModel listModel = new DefaultListModel();
        
        labelCorredorAtual.setText("Corredor: " + Cliente.corredorAtual);
        labelSetorAtual.setText("Setor: " + Cliente.setorAtual);
        
        switch(Cliente.setorAtual){
            case "alimentos":
                for (Produto produto: Estoque.setorAlimento)
                {
                    listModel.addElement(produto);
                }
                listProdutos.setModel(listModel);
                break;

            case "limpeza":
                for (Produto produto: Estoque.setorLimpeza)
                {
                    listModel.addElement(produto);
                }
                listProdutos.setModel(listModel);
                break;

            case "acougue":
                for (Produto produto: Estoque.setorAcougue)
                {
                    listModel.addElement(produto);
                }
                listProdutos.setModel(listModel);
                break;

            case "bebidas":
                for (Produto produto: Estoque.setorBebidas)
                {
                    listModel.addElement(produto);
                }
                listProdutos.setModel(listModel);
                break;

            case "hortifruti":
                for (Produto produto: Estoque.setorHortifruti)
                {
                    listModel.addElement(produto);
                }
                listProdutos.setModel(listModel);
                break;

            case "padaria":
                for (Produto produto: Estoque.setorPadaria)
                {
                    listModel.addElement(produto);
                }
                listProdutos.setModel(listModel);
                break;
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelCorredorAtual = new javax.swing.JLabel();
        labelSetorAtual = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listProdutos = new javax.swing.JList<>();
        btnAddCarrinho = new javax.swing.JButton();
        btnVoltarParaSetores = new javax.swing.JButton();
        btnFinalizarCarrinho = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();

        jLabel1.setText("Produtos");

        labelCorredorAtual.setText("Corredor: $");

        labelSetorAtual.setText("Setor: $");

        listProdutos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "$" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listProdutos);

        btnAddCarrinho.setText("Adicionar ao Carrinho");
        btnAddCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCarrinhoActionPerformed(evt);
            }
        });

        btnVoltarParaSetores.setText("Voltar para Setores");
        btnVoltarParaSetores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarParaSetoresActionPerformed(evt);
            }
        });

        btnFinalizarCarrinho.setText("Finalizar Carrinho");
        btnFinalizarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarCarrinhoActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantidade: ");

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltarParaSetores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addComponent(btnFinalizarCarrinho)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCorredorAtual, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelSetorAtual, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddCarrinho)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelCorredorAtual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSetorAtual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCarrinho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltarParaSetores)
                    .addComponent(btnFinalizarCarrinho))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void addCarrinho(ArrayList<Produto> setor, int selectedProduto, int qntCompra, java.awt.event.ActionEvent evt){
        int i = 0;
        for (Produto produto : setor) {
            if(selectedProduto == i){
                if(qntCompra <= produto.getQuantidadeEstoque()){
                    Cliente.carrinho.add(produto);
                    produto.setQuantidadeCompra(qntCompra);
                    produto.setQuantidadeEstoque(produto.getQuantidadeEstoque() - produto.getQuantidadeCompra());
                    break;
                }
                else{                    
                    JDialog dialog = new JDialog();
                    dialog.setSize(250, 100);
                    dialog.setLayout(new FlowLayout());
                    dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
                    
                    JLabel semEstoque = new JLabel("Produto sem estoque!");
                    JButton btnOk = new JButton("OK");                    
                    
                    btnOk.addActionListener(new ActionListener(){
                        @Override
                        public void actionPerformed(ActionEvent e) {                
                            dialog.dispose();
                            txtQuantidade.setText("");
                        }
                    }); 
                    
                    dialog.setTitle("Operação inválida");
                    
                    dialog.add(semEstoque);
                    dialog.add(btnOk);
                    
                    dialog.setLocationRelativeTo(SwingUtilities.getWindowAncestor(this));
                    
                    dialog.setModal(true);
                    dialog.setVisible(true);
                }
            }
            i++;
        }
        
        //atualizar tela
        JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        currentFrame.remove(((JButton)evt.getSource()).getParent());        
        currentFrame.add(((JButton)evt.getSource()).getParent());
        currentFrame.revalidate();
        currentFrame.repaint();
    }
    
    private void btnAddCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCarrinhoActionPerformed
        // TODO add your handling code here:
        int qntCompra;
        try {        
            qntCompra = Integer.parseInt(txtQuantidade.getText());
            int selectedProduto = listProdutos.getSelectedIndex();
            int i = 0;

            switch (Cliente.setorAtual) {
                case "alimentos":                        
                    addCarrinho(Estoque.setorAlimento, selectedProduto, qntCompra, evt);
                    break;

                case "limpeza":
                    addCarrinho(Estoque.setorLimpeza, selectedProduto, qntCompra, evt);
                    break;

                case "acougue":
                    addCarrinho(Estoque.setorAcougue, selectedProduto, qntCompra, evt);
                    break;

                case "bebidas":
                    addCarrinho(Estoque.setorBebidas, selectedProduto, qntCompra, evt);
                    break;

                case "hortifruti":
                    addCarrinho(Estoque.setorHortifruti, selectedProduto, qntCompra, evt);
                    break;

                case "padaria":
                    addCarrinho(Estoque.setorPadaria, selectedProduto, qntCompra, evt);
                    break;
                    
            }
        } catch (NumberFormatException e) {
            JDialog dialog = new JDialog();
            dialog.setSize(250, 100);
            dialog.setLayout(new FlowLayout());
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            
            JLabel qntInvalida = new JLabel("Quantidade de compra inválida!");
            JButton btnOk = new JButton("OK");                    
            
            btnOk.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e) {                
                    dialog.dispose();
                    txtQuantidade.setText("");
                }
            }); 
            
            dialog.setTitle("Operação inválida");
            
            dialog.add(qntInvalida);
            dialog.add(btnOk);  
            
            dialog.setLocationRelativeTo(SwingUtilities.getWindowAncestor(this));
            
            dialog.setModal(true);
            dialog.setVisible(true);
                
            //atualizar tela
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            currentFrame.remove(((JButton)evt.getSource()).getParent());        
            currentFrame.add(((JButton)evt.getSource()).getParent());
            currentFrame.revalidate();
            currentFrame.repaint();
        }                
    }//GEN-LAST:event_btnAddCarrinhoActionPerformed

    private void btnVoltarParaSetoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarParaSetoresActionPerformed
        // TODO add your handling code here:
        JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        currentFrame.remove(((JButton)evt.getSource()).getParent());
        
        Cliente.corredorAtual = 0;
        Cliente.setorAtual = null;
        
        JPanel corredoresPanel = new corredoresPanel(currentFrame);
        
        currentFrame.add(corredoresPanel);
        currentFrame.revalidate();
        currentFrame.repaint();
    }//GEN-LAST:event_btnVoltarParaSetoresActionPerformed

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    private void btnFinalizarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarCarrinhoActionPerformed
        // TODO add your handling code here:
                
        JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        currentFrame.remove(((JButton)evt.getSource()).getParent());
        
        //Cliente.corredorAtual = 0;
        //Cliente.setorAtual = null;
        
        JPanel finalizarCarrinhoPanel = new finalizarCarrinhoPanel(currentFrame);
        
        currentFrame.add(finalizarCarrinhoPanel);
        currentFrame.revalidate();
        currentFrame.repaint();
    }//GEN-LAST:event_btnFinalizarCarrinhoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCarrinho;
    private javax.swing.JButton btnFinalizarCarrinho;
    private javax.swing.JButton btnVoltarParaSetores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCorredorAtual;
    private javax.swing.JLabel labelSetorAtual;
    private javax.swing.JList<String> listProdutos;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
